Входные данные:
Текст ГОСТа (Государственного стандарта) в формате текста.

Цель:
Извлечение всех правил, параметров и элементов из предоставленного текста ГОСТа и представление их в формате JSON с описанием.

Ожидаемый вывод:
JSON-структура, содержащая параметры элементов ГОСТа в виде массива, сами элементы и их описание, а также соединение параметров с элементами.

Структура JSON:

json

{
  "param": [
    // Массив параметров элементов ГОСТа
  ],
  "elements": {
    // Элементы ГОСТа (заголовки, рисунки, таблицы и т. д.) с описанием
  },
  "gost_params": {
    // Соединение параметров и элементов ГОСТа, где ключ - параметр, а значение - элемент
  }
}

Пример входных данных:

makefile

ГОСТ 12345-67

Параметр: 1
Описание параметра: Этот параметр определяет что-то важное.

Элемент1: Заголовок1
Описание элемента: Этот заголовок относится к разделу описания продукта.

Параметр: 2
Описание параметра: Этот параметр описывает особенность продукта.

Элемент2: Рисунок1
Описание элемента: Этот рисунок иллюстрирует процесс изготовления продукта.

Пример вывода:

json

{
  "param": [
    {
      "номер": "1",
      "описание": "Описание параметра: Этот параметр определяет что-то важное."
    },
    {
      "номер": "2",
      "описание": "Описание параметра: Этот параметр описывает особенность продукта."
    }
  ],
  "elements": {
    "Элемент1": "Описание элемента: Этот заголовок относится к разделу описания продукта.",
    "Элемент2": "Описание элемента: Этот рисунок иллюстрирует процесс изготовления продукта."
  },
  "gost_params": {
    "1": "Элемент1",
    "2": "Элемент2"
  }
}

Примечание:
Модель должна учитывать различные типы элементов ГОСТа и их описания, а также соответствующие им параметры, представленные в виде массива.