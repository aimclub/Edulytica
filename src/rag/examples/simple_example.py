"""
Простой пример использования RAG пайплайна для обогащения промта
"""

from loguru import logger
import sys
import os

# Добавляем корневую директорию проекта в путь
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "../../")))

from src.rag.pipeline import RAGPipeline

def run_example():
    """
    Запускает простой пример RAG пайплайна
    """
    # Пример текста статьи (краткий отрывок)
    article_text = """
    Применение методов машинного обучения для распознавания образов в медицинских изображениях
    
    В данной статье рассматриваются современные подходы к применению методов машинного обучения 
    и глубоких нейронных сетей для задач распознавания и классификации медицинских изображений. 
    Основной акцент сделан на сравнении различных архитектур сверточных нейронных сетей 
    и их эффективности при работе с рентгеновскими снимками и МРТ.
    
    Ключевые слова: машинное обучение, медицинские изображения, сверточные нейронные сети.
    """
    
    # Пример исходного промта
    prompt = """
    Напиши краткое введение к статье по медицинским изображениям. 
    Статья должна включать обзор современных методов обработки изображений и 
    их применение в клинической практике.
    """
    
    # Название конференции для поиска
    conference_name = "YSC"  # Замените на название существующей коллекции в вашей ChromaDB
    
    print(f"Запуск обработки статьи для конференции: {conference_name}")
    print("Исходный текст статьи:")
    print("-" * 80)
    print(article_text)
    print("-" * 80)
    
    print("\nИсходный промт:")
    print("-" * 80)
    print(prompt)
    print("-" * 80)
    
    try:
        # Инициализация пайплайна
        pipeline = RAGPipeline()
        
        # Демонстрация работы без исходного промта
        print("\n[Пример 1] Обогащение без исходного промта (только статья):")
        enriched_article = pipeline.process_article(article_text, conference_name)
        print("=" * 80)
        print(enriched_article)
        print("=" * 80)
        
        # Демонстрация работы с исходным промтом
        print("\n[Пример 2] Обогащение исходного промта:")
        enriched_prompt = pipeline.process_article(article_text, conference_name, prompt)
        print("=" * 80)
        print(enriched_prompt)
        print("=" * 80)
        
    except Exception as e:
        logger.error(f"Ошибка при выполнении RAG пайплайна: {e}")
        return 1
    
    return 0

if __name__ == "__main__":
    sys.exit(run_example()) 